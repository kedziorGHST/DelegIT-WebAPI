// <auto-generated />
using System;
using DelegIT_webapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DelegIT_webapi.Migrations
{
    [DbContext(typeof(DelegITContext))]
    [Migration("20190702214044_Initial and models migration")]
    partial class Initialandmodelsmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DelegIT_webapi.Models.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("colour")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("horsePower");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("plates")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Contract", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("customerId");

                    b.Property<DateTime>("from");

                    b.Property<string>("range");

                    b.Property<DateTime>("to");

                    b.Property<string>("type");

                    b.HasKey("id");

                    b.HasIndex("customerId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city");

                    b.Property<string>("country");

                    b.Property<string>("fullCompanyName");

                    b.Property<string>("managerFName");

                    b.Property<string>("managerLName");

                    b.Property<string>("nip");

                    b.Property<string>("postCode");

                    b.Property<string>("shortCompanyName");

                    b.Property<string>("street");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Delegation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("accomodationCost");

                    b.Property<DateTime>("arrivalDate");

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<int>("contractId");

                    b.Property<string>("country")
                        .IsRequired();

                    b.Property<DateTime>("departureDate");

                    b.Property<int>("diet");

                    b.Property<int>("driveCost");

                    b.Property<int>("driveSum");

                    b.Property<int>("lumpSum");

                    b.Property<int>("numberDelegation");

                    b.Property<DateTime>("orderDate");

                    b.Property<int>("otherCost");

                    b.Property<string>("purpose")
                        .IsRequired();

                    b.Property<string>("transport")
                        .IsRequired();

                    b.Property<string>("type")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("contractId");

                    b.ToTable("Delegations");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city");

                    b.Property<string>("companyName");

                    b.Property<string>("country");

                    b.Property<string>("email");

                    b.Property<string>("fname");

                    b.Property<string>("lname");

                    b.Property<string>("login");

                    b.Property<string>("position");

                    b.Property<string>("postCode");

                    b.Property<string>("streetNumber");

                    b.HasKey("id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("carId");

                    b.Property<int>("employeeId");

                    b.Property<DateTime>("from");

                    b.Property<DateTime>("until");

                    b.Property<string>("whence")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("where")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("carId");

                    b.HasIndex("employeeId");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Visit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("contractId");

                    b.Property<int>("employeeId");

                    b.Property<DateTime>("from");

                    b.Property<DateTime>("to");

                    b.Property<string>("type");

                    b.Property<int>("workingHours");

                    b.HasKey("id");

                    b.HasIndex("contractId");

                    b.HasIndex("employeeId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Contract", b =>
                {
                    b.HasOne("DelegIT_webapi.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Delegation", b =>
                {
                    b.HasOne("DelegIT_webapi.Models.Contract", "contract")
                        .WithMany()
                        .HasForeignKey("contractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Ride", b =>
                {
                    b.HasOne("DelegIT_webapi.Models.Car", "car")
                        .WithMany()
                        .HasForeignKey("carId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DelegIT_webapi.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DelegIT_webapi.Models.Visit", b =>
                {
                    b.HasOne("DelegIT_webapi.Models.Contract", "contract")
                        .WithMany()
                        .HasForeignKey("contractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DelegIT_webapi.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
